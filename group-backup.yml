# Task file for backing up groups
# - name: Create an export list of Groups
#   # Backup to file command awk -F':' '{print " - name: " $1 "\n   gid: " $3 "\n   members: [" $4 "]"}' /etc/group > group_backup.yml
#   # ansible.builtin.shell: awk -F':' '{print " - name: " $1 "\n   gid: " $3 "\n   members: [" $4 "]"}' /etc/group
#   ansible.builtin.shell: awk -F':' '{print " - name\: " $1 "\n   gid\: " $3 "\n   members\: [" $4 "]"}' /etc/group
#   # ansible.builtin.shell: "{{ shell_command }}"
#   register: group_backup
#   # vars:
#   #   shell_command: !unsafe awk -F':' '{print " - name: " $1 "\n   gid: " $3 "\n   members: [" $4 "]"}' /etc/group

- name: Backup group information to a file
  ansible.builtin.shell: >
    awk -F':' '{printf " - name: \"%s\"\n   gid: %s\n", $1, $3; 
    split($4, members, ","); 
    printf "   members: [";
    for (i in members) {printf "\"%s\"", members[i]; if (i < length(members)) printf ", "};
    printf "]\n"}' /etc/group
  register: group_backup

# - name: debug group_backup
#   ansible.builtin.debug:
#     var: group_backup.stdout_lines | to_nice_yaml | regex_replace('^.{3}','')

- name: Save group info to backup server
  ansible.builtin.copy:
    # content: "{{ group_backup.stdout_lines | to_nice_yaml | regex_replace('-(.{3})','') }}"
    # content: "{{ group_backup.stdout | to_nice_yaml }}"
    content: "{{ group_backup.stdout_lines | to_nice_yaml | regex_replace(\"- '\",'') }}"
    dest: "{{ backup_location }}/{{ inventory_hostname }}/{{ inventory_hostname }}-group"
  delegate_to: "{{ backup_storage }}"